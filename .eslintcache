[{"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Topbar.jsx":"1","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/index.js":"2","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Tabs.jsx":"3","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Menu.jsx":"4","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AtCoder.jsx":"5","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AtCoderData.jsx":"6","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AOJ.jsx":"7","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AOJData.jsx":"8","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/CodeForces.jsx":"9"},{"size":1252,"mtime":1612329481423,"results":"10","hashOfConfig":"11"},{"size":315,"mtime":1611499745867,"results":"12","hashOfConfig":"11"},{"size":2265,"mtime":1612458849032,"results":"13","hashOfConfig":"14"},{"size":2332,"mtime":1612290905826,"results":"15","hashOfConfig":"11"},{"size":12183,"mtime":1612289612857,"results":"16","hashOfConfig":"11"},{"size":1675,"mtime":1611501769436,"results":"17","hashOfConfig":"11"},{"size":2122,"mtime":1611506790141,"results":"18","hashOfConfig":"11"},{"size":921,"mtime":1611506673764,"results":"19","hashOfConfig":"11"},{"size":0,"mtime":1611502821245,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1qiqbx0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"j272xy",{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"25"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"34"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"34"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Topbar.jsx",[],"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/index.js",[],["45","46"],"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Tabs.jsx",["47"],"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/Menu.jsx",["48","49","50","51"],"import React from \"react\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Button from \"@material-ui/core/Button\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport InboxIcon from \"@material-ui/icons/MoveToInbox\";\nimport DraftsIcon from \"@material-ui/icons/Drafts\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport { Link } from \"react-router-dom\";\n\nconst StyledMenu = withStyles({\n  paper: {\n    border: \"1px solid #e0f2f1\",\n  },\n})((props) => (\n  <Menu\n    elevation={0}\n    getContentAnchorEl={null}\n    anchorOrigin={{\n      vertical: \"bottom\",\n      horizontal: \"center\",\n    }}\n    transformOrigin={{\n      vertical: \"top\",\n      horizontal: \"center\",\n    }}\n    {...props}\n  />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n  root: {\n    \"&:focus\": {\n      backgroundColor: theme.palette.primary.main,\n      \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n        color: theme.palette.common.white,\n      },\n    },\n  },\n}))(MenuItem);\n\nexport default function CustomizedMenus() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  const handleClick = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  return (\n    <div>\n      <MenuIcon\n        aria-controls=\"customized-menu\"\n        aria-haspopup=\"true\"\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n        style={{ color: \"#e0f2f1\", backgroundColor: \"#004d40\" }}\n      />\n      <StyledMenu\n        id=\"customized-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}\n      >\n        <StyledMenuItem>\n          <ListItemIcon>\n            <HelpIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"How to Use\" />\n        </StyledMenuItem>\n        <StyledMenuItem>\n          <ListItemIcon>\n            <SendIcon fontSize=\"small\" />\n          </ListItemIcon>\n          <ListItemText primary=\"Sent mail\" />\n        </StyledMenuItem>\n      </StyledMenu>\n    </div>\n  );\n}\n","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AtCoder.jsx",["52"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport getProblemData from \"./AtCoderData\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"problemName\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Problem\",\n  },\n  { id: \"contestId\", numeric: true, disablePadding: false, label: \"Contest\" },\n  {\n    id: \"difficulty\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Difficulty\",\n  },\n  { id: \"favos\", numeric: true, disablePadding: false, label: \"Favos\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nlet deleteList = [];\n\nfunction rowDelete (deleteList) {\n  console.log(deleteList);\n}\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Bookmarks\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon\n              onClick={() => {\n                rowDelete(deleteList);\n              }}\n            />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction createData(problemName, contestId, difficulty, favos, problemUrl) {\n  return { problemName, contestId, difficulty, favos, problemUrl };\n}\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, changeItems] = React.useState([]);\n\n  React.useEffect(() => {\n    let unmounted = false;\n\n    //非同期無名関数の即時呼び出し\n    (async () => {\n      //非同期でデータを取得\n      const result = await getProblemData();\n      console.log(result);\n      const res = result.map((item) =>\n        createData(\n          item.problemName,\n          item.contestId,\n          item.difficulty,\n          3,\n          item.problemUrl\n        )\n      );\n      //アンマウントされていなければステートを更新\n      if (!unmounted) {\n        changeItems(res);\n      }\n    })();\n\n    //クリーンアップ関数を返す\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    // if (event.target.checked) {\n    //   const newSelecteds = rows.map((n) => n.name);\n    //   setSelected(newSelecteds);\n    //   return;\n    // }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n    deleteList = newSelected;\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.problemName);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.problemName}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                          onClick={(event) =>\n                            handleClick(event, row.problemName)\n                          }\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        <a href={row.problemUrl} target=\"_blank\">\n                          {row.problemName}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"right\">{row.contestId}</TableCell>\n                      <TableCell align=\"right\">{row.difficulty}</TableCell>\n                      <TableCell align=\"right\">{row.favos}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n",["53","54"],"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AtCoderData.jsx",[],"/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AOJ.jsx",["55"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AOJData from \"./AOJData\";\n\nconst useStyles = makeStyles({\n  root: {\n    // width: \"23.7rem\",\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const [Items, changeItems] = React.useState([]);\n  const [UserId, changeId] = React.useState(\"\");\n\n  function GetUserId() {\n    changeId(document.getElementById(\"input_userid\").value);\n  }\n\n  React.useEffect(() => {\n    let unmounted = false;\n\n    //非同期無名関数の即時呼び出し\n    (async () => {\n      //非同期でデータを取得\n      const result = await AOJData(UserId);\n      //アンマウントされていなければステートを更新\n      if (!unmounted) {\n        changeItems(result);\n      }\n    })();\n\n    //クリーンアップ関数を返す\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  function CardList({ items }) {\n    const classes = useStyles();\n    return items.map((item) => (\n      <Card className={classes.root}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            window.location.href = item.problemUrl;\n          }}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {item.problemId}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {item.problemTitle}\n            </Typography>\n          </CardContent>\n        </Button>\n      </Card>\n    ));\n  }\n  return (\n    <div>\n      <input type=\"text\" id=\"input_userid\"></input>\n      <input\n        type=\"button\"\n        onClick={() => {\n          GetUserId();\n        }}\n        value=\"Confirm\"\n      />\n      <CardList items={Items} />\n    </div>\n  );\n}\n","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/AOJData.jsx",["56"],"const axios = require(\"axios\");\n\n// async function GetTitle(ProblemId) {\n//   const Api = await axios.get(\n//     `https://judgeapi.u-aizu.ac.jp/resources/descriptions/ja/${ProblemId}`\n//   );\n//   const Html = Api.data.html;\n//   const ProblemTitle = Html.getElementsByClassName(\"title\")[0];\n//   return ProblemTitle;\n// }\n\nasync function GetApi(UserName) {\n  try {\n    const BookmarkData = await axios.get(\n      `https://judgeapi.u-aizu.ac.jp/bookmarks/users/${UserName}`\n    );\n    const List = [];\n    for (const item of BookmarkData.data) {\n      List.push({ problemId: item.problemId });\n    }\n    return List;\n  } catch (error) {\n    const { status, statusText } = error.response;\n    console.log(`Error! HTTP Status: ${status} ${statusText}`);\n  }\n}\n\nexport default async function AOJData(UserName) {\n  if (UserName === \"\") return [];\n  const Data = await GetApi(UserName);\n  console.log(Data);\n  return Data;\n}\n","/Users/oxyshower/Web/starserver/AtCoderBookmarks/src/CodeForces.jsx",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":11,"column":8,"nodeType":"63","messageId":"64","endLine":11,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":3,"column":8,"nodeType":"63","messageId":"64","endLine":3,"endColumn":14},{"ruleId":"61","severity":1,"message":"66","line":8,"column":8,"nodeType":"63","messageId":"64","endLine":8,"endColumn":17},{"ruleId":"61","severity":1,"message":"67","line":9,"column":8,"nodeType":"63","messageId":"64","endLine":9,"endColumn":18},{"ruleId":"61","severity":1,"message":"68","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":14},{"ruleId":"69","severity":1,"message":"70","line":382,"column":50,"nodeType":"71","endLine":382,"endColumn":65},{"ruleId":"57","replacedBy":"72"},{"ruleId":"59","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":52,"column":6,"nodeType":"76","endLine":52,"endColumn":8,"suggestions":"77"},{"ruleId":"78","severity":1,"message":"79","line":29,"column":16,"nodeType":"80","messageId":"81","endLine":29,"endColumn":18},"no-native-reassign",["82"],"no-negated-in-lhs",["83"],"no-unused-vars","'CodeForces' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'InboxIcon' is defined but never used.","'DraftsIcon' is defined but never used.","'Link' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute",["82"],["83"],"react-hooks/exhaustive-deps","React Hook React.useEffect has a missing dependency: 'UserId'. Either include it or remove the dependency array.","ArrayExpression",["84"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"85","fix":"86"},"Update the dependencies array to be: [UserId]",{"range":"87","text":"88"},[1143,1145],"[UserId]"]