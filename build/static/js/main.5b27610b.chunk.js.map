{"version":3,"sources":["Topbar.jsx","AtCoderData.jsx","AtCoder.jsx","AOJData.jsx","AOJ.jsx","Tabs.jsx","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","className","AppBar","position","style","color","backgroundColor","Toolbar","Typography","variant","IconButton","edge","aria-label","ProblemData","contestId","a","axios","require","get","res","items","data","item","id","response","status","statusText","console","log","GetDifficulty","difficulty","GetData","localData","dataList","idx","problemUrl","length","split","reverse","join","Item","Difficulty","push","userName","contest_id","problemName","AtCoderData","JSON","parse","localStorage","getItem","descendingComparator","b","orderBy","getComparator","order","stableSort","array","comparator","stabilizedThis","map","el","index","sort","headCells","numeric","disablePadding","label","EnhancedTableHead","props","onSelectAllClick","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","onChange","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","onClick","property","event","visuallyHidden","useToolbarStyles","paddingLeft","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","deleteList","EnhancedTableToolbar","clsx","component","Tooltip","rowDelete","width","paper","marginBottom","table","minWidth","border","clip","height","margin","overflow","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","setDense","rowsPerPage","setRowsPerPage","rows","changeItems","useEffect","unmounted","getProblemData","result","favos","emptyRows","Math","min","Paper","TableContainer","Table","aria-labelledby","size","TableBody","slice","row","name","isItemSelected","indexOf","labelId","hover","role","aria-checked","tabIndex","selectedIndex","newSelected","concat","handleClick","scope","href","target","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","GetApi","UserName","BookmarkData","List","problemId","AOJData","Data","bullet","display","transform","fontSize","pos","SimpleCard","Items","UserId","changeId","CardList","Card","Button","window","location","CardContent","gutterBottom","problemTitle","document","getElementById","TabPanel","children","other","hidden","Box","p","a11yProps","background","ScrollableTabsButtonAuto","setValue","Tabs","newValue","indicatorColor","textColor","scrollButtons","Tab","App","querySelector","ReactDOM","render"],"mappings":"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","file":"static/js/main.5b27610b.chunk.js","sourcesContent":["import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n// import Menu from \"./Menu\";\n// import Help from \"./Help\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar\n        position=\"static\"\n        style={{ color: \"#e0f2f1\", backgroundColor: \"#004d40\" }}\n      >\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.title}>\n            AtCoder Bookmarks\n          </Typography>\n          {/* <Button color=\"inherit\">Login</Button> */}\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"menu\"\n          >\n            <HelpIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n}\n","async function ProblemData(contestId) {\n  try {\n    const axios = require(\"axios\");\n    const res = await axios.get(\n      \"https://kenkoooo.com/atcoder/resources/problems.json\"\n    );\n    const items = res.data;\n    for (const item of items) {\n      if (item.id === contestId) {\n        return item;\n      }\n    }\n  } catch (error) {\n    const { status, statusText } = error.response;\n    console.log(`Error! HTTP Status: ${status} ${statusText}`);\n  }\n}\n\nasync function GetDifficulty(contestId) {\n  try {\n    const axios = require(\"axios\");\n    const data = await axios.get(\n      \"https://kenkoooo.com/atcoder/resources/problem-models.json\"\n    );\n    return data.data[contestId].difficulty;\n  } catch (error) {\n    const { status, statusText } = error.response;\n    console.log(`Error! HTTP Status: ${status} ${statusText}`);\n  }\n}\n\nasync function GetData(localData) {\n  let dataList = [];\n  for (const data of localData) {\n    let contestId = \"\";\n    let idx = data.problemUrl.length - 1;\n    while (data.problemUrl[idx] !== \"/\") contestId += data.problemUrl[idx--];\n    contestId = contestId.split(\"\").reverse().join(\"\"); // 反転\n    const Item = await ProblemData(contestId);\n    const Difficulty = await GetDifficulty(Item.id);\n    dataList.push({\n      userName: data.userName,\n      contestId: Item.contest_id,\n      problemName: Item.title,\n      difficulty: Difficulty,\n      problemUrl: data.problemUrl,\n    });\n  }\n  return dataList;\n}\n\nexport default async function AtCoderData() {\n  try {\n    const localData = await JSON.parse(localStorage.getItem(\"atcoder\"));\n    const res = await GetData(localData);\n    return res;\n  } catch (e) {\n    return [];\n  }\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\nimport getProblemData from \"./AtCoderData\";\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"problemName\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Problem\",\n  },\n  { id: \"contestId\", numeric: true, disablePadding: false, label: \"Contest\" },\n  {\n    id: \"difficulty\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Difficulty\",\n  },\n  { id: \"favos\", numeric: true, disablePadding: false, label: \"Favos\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nlet deleteList = [];\n\nfunction rowDelete (deleteList) {\n  console.log(deleteList);\n}\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Bookmarks\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon\n              onClick={() => {\n                rowDelete(deleteList);\n              }}\n            />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\",\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nfunction createData(problemName, contestId, difficulty, favos, problemUrl) {\n  return { problemName, contestId, difficulty, favos, problemUrl };\n}\n\nexport default function EnhancedTable() {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"calories\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const [rows, changeItems] = React.useState([]);\n\n  React.useEffect(() => {\n    let unmounted = false;\n\n    //非同期無名関数の即時呼び出し\n    (async () => {\n      //非同期でデータを取得\n      const result = await getProblemData();\n      console.log(result);\n      const res = result.map((item) =>\n        createData(\n          item.problemName,\n          item.contestId,\n          item.difficulty,\n          3,\n          item.problemUrl\n        )\n      );\n      //アンマウントされていなければステートを更新\n      if (!unmounted) {\n        changeItems(res);\n      }\n    })();\n\n    //クリーンアップ関数を返す\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    // if (event.target.checked) {\n    //   const newSelecteds = rows.map((n) => n.name);\n    //   setSelected(newSelecteds);\n    //   return;\n    // }\n    setSelected([]);\n  };\n\n  const handleClick = (event, name) => {\n    const selectedIndex = selected.indexOf(name);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, name);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n    deleteList = newSelected;\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? \"small\" : \"medium\"}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.problemName);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.problemName}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                          onClick={(event) =>\n                            handleClick(event, row.problemName)\n                          }\n                        />\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        scope=\"row\"\n                        padding=\"none\"\n                      >\n                        <a href={row.problemUrl} target=\"_blank\">\n                          {row.problemName}\n                        </a>\n                      </TableCell>\n                      <TableCell align=\"right\">{row.contestId}</TableCell>\n                      <TableCell align=\"right\">{row.difficulty}</TableCell>\n                      <TableCell align=\"right\">{row.favos}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n      <FormControlLabel\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\n        label=\"Dense padding\"\n      />\n    </div>\n  );\n}\n","const axios = require(\"axios\");\n\n// async function GetTitle(ProblemId) {\n//   const Api = await axios.get(\n//     `https://judgeapi.u-aizu.ac.jp/resources/descriptions/ja/${ProblemId}`\n//   );\n//   const Html = Api.data.html;\n//   const ProblemTitle = Html.getElementsByClassName(\"title\")[0];\n//   return ProblemTitle;\n// }\n\nasync function GetApi(UserName) {\n  try {\n    const BookmarkData = await axios.get(\n      `https://judgeapi.u-aizu.ac.jp/bookmarks/users/${UserName}`\n    );\n    const List = [];\n    for (const item of BookmarkData.data) {\n      List.push({ problemId: item.problemId });\n    }\n    return List;\n  } catch (error) {\n    const { status, statusText } = error.response;\n    console.log(`Error! HTTP Status: ${status} ${statusText}`);\n  }\n}\n\nexport default async function AOJData(UserName) {\n  if (UserName === \"\") return [];\n  const Data = await GetApi(UserName);\n  console.log(Data);\n  return Data;\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AOJData from \"./AOJData\";\n\nconst useStyles = makeStyles({\n  root: {\n    // width: \"23.7rem\",\n    minWidth: 275,\n  },\n  bullet: {\n    display: \"inline-block\",\n    margin: \"0 2px\",\n    transform: \"scale(0.8)\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n});\n\nexport default function SimpleCard() {\n  const [Items, changeItems] = React.useState([]);\n  const [UserId, changeId] = React.useState(\"\");\n\n  function GetUserId() {\n    changeId(document.getElementById(\"input_userid\").value);\n  }\n\n  React.useEffect(() => {\n    let unmounted = false;\n\n    //非同期無名関数の即時呼び出し\n    (async () => {\n      //非同期でデータを取得\n      const result = await AOJData(UserId);\n      //アンマウントされていなければステートを更新\n      if (!unmounted) {\n        changeItems(result);\n      }\n    })();\n\n    //クリーンアップ関数を返す\n    return () => {\n      unmounted = true;\n    };\n  }, []);\n\n  function CardList({ items }) {\n    const classes = useStyles();\n    return items.map((item) => (\n      <Card className={classes.root}>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            window.location.href = item.problemUrl;\n          }}\n        >\n          <CardContent>\n            <Typography color=\"textSecondary\" gutterBottom>\n              {item.problemId}\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {item.problemTitle}\n            </Typography>\n          </CardContent>\n        </Button>\n      </Card>\n    ));\n  }\n  return (\n    <div>\n      <input type=\"text\" id=\"input_userid\"></input>\n      <input\n        type=\"button\"\n        onClick={() => {\n          GetUserId();\n        }}\n        value=\"Confirm\"\n      />\n      <CardList items={Items} />\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport AtCoder from \"./AtCoder\";\nimport AOJ from \"./AOJ\";\nimport CodeForces from \"./CodeForces\";\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`,\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    width: \"100%\",\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nexport default function ScrollableTabsButtonAuto() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color=\"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"AtCoder\" {...a11yProps(0)} />\n          <Tab label=\"AOJ\" {...a11yProps(1)} />\n          <Tab label=\"Codeforces\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n        <AtCoder />\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n        <AOJ />\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      </TabPanel>\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Topbar from \"./Topbar\";\nimport Tabs from \"./Tabs\";\nimport \"./style.css\";\n\nfunction App() {\n  \n  return (\n    <div>\n      <Topbar />\n      <Tabs />\n    </div>\n  );\n}\n\nconst target = document.querySelector(\"#app\");\nReactDOM.render(<App />, target);\n"],"sourceRoot":""}